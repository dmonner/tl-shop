; This extremely simple example tests that LTL is working.
; A "dummy" variable is introduced, along with an additional method for swap,
; such that there are two viable plans if no constraints are imposed - one plan
; that removes the dummy and one that does not. Several possible placings of
; LTL constraints are provided below, commented out. You can see how LTL
; operates by uncommenting these one-by-one to see whether or not they affect
; the final outcome, and feel free to try others!

(defdomain basicltl (
  (:operator (!pickup ?a) () () ((have ?a)))
  (:operator (!drop ?a) ((have ?a)) ((have ?a)) ())
  (:operator (!removedummy) ((dummy)) ((dummy)) ()
;    (:constraint (:always (dummy)))
  )

  (:method (swap ?x ?y)
    ((have ?x) (not (have ?y)))
    ((!removedummy) (!drop ?x) (!pickup ?y))
    ((have ?y) (not (have ?x)))
    ((!removedummy) (!drop ?y) (!pickup ?x))
;    (:constraint (:always (dummy)))
  )
  
  (:method (swap ?x ?y)
    ((have ?x) (not (have ?y)))
    ((!drop ?x) (!pickup ?y))
    ((have ?y) (not (have ?x)))
    ((!drop ?y) (!pickup ?x))
;    (:constraint (:always (dummy)))
  )
  
;  (:constraint (:always (dummy)))
))
